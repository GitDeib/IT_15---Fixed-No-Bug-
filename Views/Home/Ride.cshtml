@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Passenger")]
@using IT15_Project.Models

<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" crossorigin="anonymous" />

@* <!-- Bootstrap -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script> *@

<!-- Mapbox -->
<link href="https://api.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.css" rel="stylesheet" />
<script src="https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.js"></script>

<link href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.3.0/mapbox-gl-geocoder.css" rel="stylesheet" />
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.3.0/mapbox-gl-geocoder.min.js"></script>

<script src="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.1/mapbox-gl-directions.js"></script>
<link href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.1/mapbox-gl-directions.css" rel="stylesheet" />

<!-- Fullscreen Map -->
<div id="map" class="position-fixed start-0 w-100" style="top: 85px; bottom: 60px; z-index: 0;"></div>

@if (ViewBag.ActiveBooking == null ||
   (ViewBag.ActiveBooking.Status == BookingStatus.Completed &&
    ViewBag.ActiveBooking.PaymentStatus == PaymentStatus.Paid))
{
    <div class="position-fixed start-0 w-100 shadow" style="top: 85px; z-index: 2;">
        <div class="px-3 pb-3 bg-white bg-opacity-75 rounded-bottom" style="max-height: 180px;">
            <!-- TempData alerts -->
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger" role="alert">@TempData["Error"]</div>
            }
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success" role="alert">@TempData["Success"]</div>
            }
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            <h1 class="text-center fs-4 mb-3">Set Destination</h1>

            <form class="row g-2 justify-content-center">
                <!-- Pickup -->
                <div class="col-12 col-md-3 col-lg-3">
                    <div class="form-floating position-relative">
                        <input type="text" class="form-control pe-5" id="pickup" placeholder="Pickup" readonly>
                        <label for="pickup">Pickup</label>
                        <button type="button" class="btn position-absolute top-50 end-0 translate-middle-y me-2 p-0 text-primary" onclick="addPickupPin()">
                            <i class="fas fa-map-marker-alt fa-lg"></i>
                        </button>
                    </div>
                </div>

                <!-- Dropoff -->
                <div class="col-12 col-md-3 col-lg-3">
                    <div class="form-floating position-relative">
                        <input type="text" class="form-control pe-5" id="dropoff" placeholder="Drop-off" readonly>
                        <label for="dropoff">Drop-off</label>
                        <button type="button" class="btn position-absolute top-50 end-0 translate-middle-y me-2 p-0 text-danger" onclick="addDropoffPin()">
                            <i class="fas fa-location-dot fa-lg"></i>
                        </button>
                    </div>
                </div>

                <!-- Next -->
                <div class="col-12 col-md-2 col-lg-1">
                    <button type="button" class="btn btn-dark w-100 py-3 h-100" id="nextBtn" data-bs-toggle="offcanvas" data-bs-target="#sidepass" disabled>
                        Next
                    </button>
                </div>
            </form>

        </div>
    </div>

    <!-- Sidebar Next -->
    <div class="offcanvas offcanvas-end shadow" tabindex="-1" id="sidepass" data-bs-backdrop="false" data-bs-scroll="true">
    <div class="offcanvas-header bg-white border-bottom py-3">
        <div>
            <h5 class="offcanvas-title fw-semibold text-dark">Book a Ride</h5>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>

    <div class="offcanvas-body bg-light">
        <!-- Vehicle Type -->
        <div class="mb-4">
            <h6 class="text-muted mb-1">Vehicle Type</h6>
            <div class="form-floating">
                    <select class="form-select" id="Typevehicle" required>
                    <option disabled selected>Select Type</option>
                    <option>Car</option>
                    <option>Motorcycle</option>
                </select>
                    <small id="vehicleTypeError" class="text-danger d-none">Please select a vehicle type.</small>
                    <label for="Typevehicle">Type of Vehicle</label>
            </div>
        </div>

        <!-- Seat Type -->
        <div class="mb-4">
            <h6 class="text-muted mb-1">Seat Type</h6>
            <div class="form-floating">
                    <select class="form-select" id="rideType" required>
                    <option disabled selected>Select Type</option>
                </select>
                    <small id="seatTypeError" class="text-danger d-none">Please select a seat type.</small>
                    <label for="rideType">Seat Type</label>
            </div>
        </div>

        <!-- Fare Breakdown -->
        <div class="row text-center mb-4">
            <h6 class="text-muted mb-2"><i class="fas fa-info-circle me-2"></i>Fare Breakdown</h6>
            <div class="col">
                <div class="small text-muted mb-1">Base Fare</div>
                <div class="fw-semibold"><span id="baseFare">0</span></div>
            </div>
            <div class="col">
                <div class="small text-muted mb-1">Per KM</div>
                <div class="fw-semibold"><span id="perKm">0</span></div>
            </div>
            <div class="col">
                <div class="small text-muted mb-1">Per Min</div>
                <div class="fw-semibold"><span id="perMinute">0</span></div>
            </div>
        </div>
        <hr />
        <!-- Pickup & Dropoff -->
        <div class="mb-4">
            <h6 class="text-muted mb-2"><i class="fas fa-map-marker-alt text-primary me-2"></i>Pickup Location</h6>
            <div class="fw-medium" id="pickupLocationDisplay">N/A</div>
        </div>

        <div class="mb-4">
            <h6 class="text-muted mb-2"><i class="fas fa-location-dot text-danger me-2"></i>Dropoff Location</h6>
            <div class="fw-medium" id="dropoffLocationDisplay">N/A</div>
        </div>

        <!-- Coordinates -->
            <div class="row mb-4 d-none">
            <div class="col-6 small text-muted">
                <div>Pickup Lat: <span id="pickupLat">N/A</span></div>
                <div>Pickup Lng: <span id="pickupLng">N/A</span></div>
            </div>
            <div class="col-6 small text-muted">
                <div>Dropoff Lat: <span id="dropoffLat">N/A</span></div>
                <div>Dropoff Lng: <span id="dropoffLng">N/A</span></div>
            </div>
        </div>

        <!-- Distance & Time -->
        <div class="row mb-4">
            <div class="col-6">
                <h6 class="text-muted mb-1"><i class="fas fa-road me-2"></i>Distance</h6>
                <div class="fw-medium" id="distanceDisplay">N/A</div>
            </div>
            <div class="col-6">
                <h6 class="text-muted mb-1"><i class="fas fa-clock me-2"></i>Est. Time</h6>
                <div class="fw-medium" id="timeDisplay">N/A</div>
            </div>
        </div>

        <!-- Estimated Fare -->
        <div class="text-center mb-4">
            <h6 class="text-muted mb-1"><i class="fas fa-money-bill me-2"></i>Estimated Total Fare</h6>
            <div class="fs-5 fw-semibold text-success"><span id="totalFare">0</span></div>
        </div>

        <hr class="my-4" />

        <!-- Form Submission -->
        <form method="post" asp-controller="Home" asp-action="Ride" id="bookingForm">
            @Html.AntiForgeryToken()
            <input type="hidden" name="PickupLocation" id="PickupLocationInput">
            <input type="hidden" name="DropoffLocation" id="DropoffLocationInput">
            <input type="hidden" name="PickupLatitude" id="PickupLatInput">
            <input type="hidden" name="PickupLongitude" id="PickupLngInput">
            <input type="hidden" name="DropoffLatitude" id="DropoffLatInput">
            <input type="hidden" name="DropoffLongitude" id="DropoffLngInput">
            <input type="hidden" name="DistanceInKm" id="DistanceInput">
            <input type="hidden" name="EstimatedTimeInMinutes" id="TimeInput">
            <input type="hidden" name="EstimatedFare" id="FareInput">
            <input type="hidden" name="VehicleType" id="VehicleTypeInput">
            <input type="hidden" name="VehicleSeat" id="VehicleSeatInput">
            <input type="hidden" name="FareSettingsId" id="FareSettingsIdInput">

            <button type="button" class="btn btn-outline-dark w-100 rounded-pill shadow-sm" onclick="submitBooking()">
                <i class="fas fa-paper-plane me-2"></i> Book Ride
            </button>
        </form>
    </div>
</div>

}
@if (ViewBag.ActiveBooking != null &&
   (ViewBag.ActiveBooking.Status == BookingStatus.Pending ||
    ViewBag.ActiveBooking.Status == BookingStatus.Accepted ||
    ViewBag.ActiveBooking.Status == BookingStatus.Started ||
    ViewBag.ActiveBooking.Status == BookingStatus.Completed) &&
    ViewBag.ActiveBooking.PaymentStatus == PaymentStatus.Unpaid) // Pending
{
    var booking = ViewBag.ActiveBooking;

    <div class="offcanvas offcanvas-end show" tabindex="-1" id="activeBookingModal" data-bs-backdrop="false" data-bs-scroll="true">
        <div class="offcanvas-header border-bottom py-3">
            <div>
                @{
                    string statusClass = booking.Status switch
                    {
                        BookingStatus.Pending => "bg-warning text-dark",
                        BookingStatus.Accepted => "bg-primary",
                        BookingStatus.Started => "bg-info text-dark",
                        BookingStatus.Completed => "bg-success",
                        BookingStatus.Cancelled => "bg-danger",
                        _ => "bg-secondary"
                    };
                }
                <h5 class="offcanvas-title fw-semibold">Current Ride</h5>
                <span class="badge small @statusClass">Status: @booking.Status</span>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>

        <div class="offcanvas-body">
            <div class="mb-4">
                <h6 class="text-muted mb-1"><i class="fas fa-map-marker-alt text-primary me-2"></i>Pickup Location</h6>
                <div class="fw-medium">@booking.PickupLocation</div>
            </div>

            <div class="mb-4">
                <h6 class="text-muted mb-1"><i class="fas fa-location-dot text-danger me-2"></i>Dropoff Location</h6>
                <div class="fw-medium">@booking.DropoffLocation</div>
            </div>

            <div class="row mb-4">
                <div class="col-6">
                    <h6 class="text-muted mb-2"><i class="fas fa-car-side me-2"></i>Vehicle Info</h6>
                    <div><strong>Type:</strong> @booking.VehicleType</div>
                    <div><strong>Seats:</strong> @booking.VehicleSeat</div>
                </div>
                <div class="col-6">
                    <h6 class="text-muted mb-2"><i class="fas fa-info-circle me-2"></i>Fare Breakdown</h6>
                    <div>Base Fare: <strong>₱@booking.FareSetting?.BaseFare</strong></div>
                    <div>Per KM: <strong>₱@booking.FareSetting?.PerKilometerRate</strong></div>
                    <div>Per Minute: <strong>₱@booking.FareSetting?.PerMinuteRate</strong></div>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-6">
                    <h6 class="text-muted mb-1"><i class="fas fa-road me-2"></i>Distance</h6>
                    <div class="fw-medium">@booking.DistanceInKm.ToString("0.00") km</div>
                </div>
                <div class="col-6">
                    <h6 class="text-muted mb-1"><i class="fas fa-clock me-2"></i>Time</h6>
                    @if (booking.Status == BookingStatus.Completed)
                    {
                        <div class="fw-medium">@booking.ActualTimeInMinutes?.ToString("0.0") mins</div>
                    }
                    else
                    {
                        <div class="fw-medium">@booking.EstimatedTimeInMinutes mins (est.)</div>
                    }
                </div>
            </div>

            <div class="text-center mb-4">
                <h6 class="text-muted mb-1">
                    <i class="fas fa-money-bill me-2"></i>
                    @(booking.Status == BookingStatus.Completed ? "Final Fare" : "Estimated Fare")
                </h6>
                <div class="fs-5 fw-semibold text-success">
                    ₱@(booking.Status == BookingStatus.Completed ? booking.FinalFare?.ToString("0.00") : booking.EstimatedFare.ToString("0.00"))
                </div>
            </div>

            @if (booking.Status == BookingStatus.Pending)
            {
                <form asp-action="CancelBooking" method="post" class="mb-2">
                    <input type="hidden" name="bookingId" value="@booking.Id" />
                    <button type="submit" class="btn btn-outline-danger w-100 rounded-pill shadow-sm">
                        <i class="fas fa-times-circle me-2"></i> Cancel Booking
                    </button>
                </form>
            }
            else if (booking.Status == BookingStatus.Completed && booking.PaymentStatus == PaymentStatus.Unpaid)
            {
                <div class="alert alert-warning rounded-3 shadow-sm" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    Please complete the payment to finish your ride.
                </div>
                <form asp-controller="Home" asp-action="ConfirmPayment" method="post" class="mb-2">
                    <input type="hidden" name="bookingId" value="@booking.Id" />
                    <button type="submit" class="btn btn-outline-success w-100 rounded-pill shadow-sm">
                        <i class="fas fa-dollar me-2"></i> Pay
                    </button>
                </form>
            }
        </div>
    </div>

    <!-- Arrow Pull Handle (Right Side) -->
    <div id="pullHandle" class="position-fixed top-50 translate-middle-y" style="right: 0; z-index: 1050;">
        <button type="button"
                class="btn bg-dark text-white rounded-start-pill px-3 py-2 shadow-sm d-flex align-items-center"
                data-bs-toggle="offcanvas" data-bs-target="#activeBookingModal" aria-label="Show Current Ride"
                style="border-top-right-radius: 0; border-bottom-right-radius: 0;">
            <i class="fas fa-chevron-left me-2"></i>
            <span class="d-none d-md-inline">Ride</span>
        </button>
    </div>
    @if (booking.Status == BookingStatus.Pending)
    {
        <div class="alert alert-warning text-center mt-4 rounded-3 shadow-sm" role="alert">
            <i class="fas fa-spinner fa-spin me-2"></i>
            Please wait for a driver to accept your request.
        </div>
    }
}

    </div>



<!-- Booking Instructions Modal -->
<div class="modal fade" id="instructionModal" tabindex="-1" aria-labelledby="instructionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="instructionModalLabel"><i class="fas fa-info-circle me-2"></i>How to Use the Booking Feature</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body fs-6">
                <ol>
                    <li>Click the <span class="text-primary fw-bold">blue map icon
                        <i class="fas fa-map-marker-alt fa-lg"></i>
                        </span> to set your <strong>Pickup</strong> location.</li>
                    <li>
                        Click the <span class="text-danger fw-bold">
                            red map icon                            <i class="fas fa-location-dot fa-lg"></i>
                        </span> to set your <strong>Drop-off</strong> location.
                    </li>
                    <li>Drag the pins on the map to your preferred locations.</li>
                    <li>Once both pins are placed, a <strong>route/direction</strong> will appear on the map.</li>
                    <li class="text-danger"><strong>Note:</strong> The input boxes cannot be used as search is limited. Please use the map to pinpoint locations.</li>
                    <li>When the route appears, the <strong>"Next"</strong> button will be enabled.</li>
                    <li>Click <strong>"Next"</strong> to view ride details.</li>
                    <li>Select your <strong>Vehicle Type</strong> and <strong>Seat Type</strong>.</li>
                    <li>Once you're satisfied, click <strong>"Book ride"</strong> and wait for a driver to accept your request.</li>
                </ol>
                <small>Note: The page needs to be reloaded to see the changes</small>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-dark" data-bs-dismiss="modal">Got It!</button>
            </div>
        </div>
    </div>
</div>

   



    <!-- Your custom map logic -->
    <script src="~/js/map - v3.js"></script>

    <script>
        // Initialize map with active booking if exists
        @if (ViewBag.ActiveBooking != null)
        {
            var booking = ViewBag.ActiveBooking;
            <text>
                map.on('load', function () {
                    // Set pickup and dropoff markers
                    const pickupMarker = new mapboxgl.Marker({ color: 'blue' })
                        .setLngLat([@booking.PickupLongitude, @booking.PickupLatitude])
                        .addTo(map);

                    const dropoffMarker = new mapboxgl.Marker({ color: 'red' })
                        .setLngLat([@booking.DropoffLongitude, @booking.DropoffLatitude])
                        .addTo(map);

                    // Set route
                    directions.setOrigin([@booking.PickupLongitude, @booking.PickupLatitude]);
                    directions.setDestination([@booking.DropoffLongitude, @booking.DropoffLatitude]);

                    // Fit map to show both markers
                    const bounds = new mapboxgl.LngLatBounds();
                    bounds.extend([@booking.PickupLongitude, @booking.PickupLatitude]);
                    bounds.extend([@booking.DropoffLongitude, @booking.DropoffLatitude]);
                    map.fitBounds(bounds, { padding: 50 });

                    // Show the active booking modal by default
                    const activeBookingModal = new bootstrap.Offcanvas(document.getElementById('activeBookingModal'));
                    activeBookingModal.show();
                });
            </text>
        }
    </script>

<script>
        const offcanvasElement = document.getElementById('activeBookingModal');
    const pullHandle = document.getElementById('pullHandle');

    if (offcanvasElement && pullHandle) {
        offcanvasElement.addEventListener('show.bs.offcanvas', function () {
            pullHandle.style.display = 'none';
        });

        offcanvasElement.addEventListener('hidden.bs.offcanvas', function () {
            pullHandle.style.display = 'block';
        });
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var myModal = new bootstrap.Modal(document.getElementById('instructionModal'));
        myModal.show();
    });
</script>
